"use strict";(self.webpackChunkonekey_document=self.webpackChunkonekey_document||[]).push([[2129],{149:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var a=t(7462),s=t(3366),r=(t(7294),t(3905)),i=t(9216),l=["components"],o={hide_table_of_contents:!0},d=void 0,p={unversionedId:"Connect/Method List/solanaGetAddress",id:"Connect/Method List/solanaGetAddress",isDocsHomePage:!1,title:"solanaGetAddress",description:"Solana: get address",source:"@site/docs/Connect/Method List/solanaGetAddress.mdx",sourceDirName:"Connect/Method List",slug:"/Connect/Method List/solanaGetAddress",permalink:"/en/Connect/Method List/solanaGetAddress",editUrl:"https://github.com/onekeyhq/documents/edit/main/docs/Connect/Method List/solanaGetAddress.mdx",version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"ConnectSidebar",previous:{title:"signTransaction",permalink:"/en/Connect/Method List/signTransaction"},next:{title:"solanaSignTransaction",permalink:"/en/Connect/Method List/solanaSignTransaction"}},u=[{value:"Solana: get address",id:"solana-get-address",children:[{value:"Params",id:"params",children:[]},{value:"Example",id:"example",children:[]},{value:"Result",id:"result",children:[]},{value:"Error Detail",id:"error-detail",children:[]}]}],c={toc:u};function m(e){var n=e.components,t=(0,s.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"solana-get-address"},"Solana: get address"),(0,r.kt)("p",null,"Display requested address derived by given path on device and returns it to caller. User is presented with a description of the requested key and asked to confirm the export on OneKey."),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"This method is supported after OneKey Connect JS-SDK version v8.6.0, and npm modules equal or larger than this version can be used."),(0,r.kt)("li",{parentName:"ul"},"The OneKey device firmware may also be different for the user, caller should handle the response of method like firmware not support issue.")))),(0,r.kt)("p",null,"ES6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const result = await OneKeyConnect.solanaGetAddress(params);\n")),(0,r.kt)("p",null,"CommonJS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.solanaGetAddress(params).then(function(result) {\n\n});\n")),(0,r.kt)("h3",{id:"params"},"Params"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./commonParams"},(0,r.kt)("strong",{parentName:"a"},"Optional common params"))),(0,r.kt)("h4",{id:"exporting-single-address"},"Exporting single address"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"path")," \u2014 ",(0,r.kt)("em",{parentName:"li"},"required")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string | Array<number>")," minimum length is ",(0,r.kt)("inlineCode",{parentName:"li"},"3"),". ",(0,r.kt)("a",{parentName:"li",href:"./path"},"read more")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"address")," \u2014 ",(0,r.kt)("em",{parentName:"li"},"optional")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," address for validation (read ",(0,r.kt)("inlineCode",{parentName:"li"},"Handle button request")," section below)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"showOnDevice")," \u2014 ",(0,r.kt)("em",{parentName:"li"},"optional")," ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean")," determines if address will be displayed on device. Default is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"true"))),(0,r.kt)("h4",{id:"exporting-bundle-of-addresses"},"Exporting bundle of addresses"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bundle")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," of Objects with ",(0,r.kt)("inlineCode",{parentName:"li"},"path")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"showOnDevice")," fields")),(0,r.kt)("h4",{id:"handle-button-request"},"Handle button request"),(0,r.kt)("p",null,"There is a possibility to handle ",(0,r.kt)("inlineCode",{parentName:"p"},"UI.ADDRESS_VALIDATION")," event which will be triggered once the address is displayed on the device.\nYou can handle this event and display custom UI inside of your application."),(0,r.kt)("p",null,"If certain conditions are fulfilled popup will not be used at all:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the user gave permissions to communicate with OneKey"),(0,r.kt)("li",{parentName:"ul"},"device is authenticated by pin/passphrase"),(0,r.kt)("li",{parentName:"ul"},"application has ",(0,r.kt)("inlineCode",{parentName:"li"},"OneKeyConnect.on(UI.ADDRESS_VALIDATION, () => {});")," listener registered"),(0,r.kt)("li",{parentName:"ul"},"parameter ",(0,r.kt)("inlineCode",{parentName:"li"},"address")," is set"),(0,r.kt)("li",{parentName:"ul"},"parameter ",(0,r.kt)("inlineCode",{parentName:"li"},"showOnDevice")," is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," (or not set at all)"),(0,r.kt)("li",{parentName:"ul"},"application is requesting ONLY ONE address")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"Display address of first solana account:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.solanaGetAddress({\n    path: \"m/44'/501'/0'/0'\"\n});\n")),(0,r.kt)("p",null,"Return a bundle of solana addresses without displaying them on device:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.solanaGetAddress({\n    bundle: [\n        { path: \"m/44'/501'/0'/0'\", showOnDevice: false }, // account 1\n        { path: \"m/44'/501'/1'/0'\", showOnDevice: false }, // account 2\n        { path: \"m/44'/501'/2'/0'\", showOnDevice: false }  // account 3\n    ]\n});\n")),(0,r.kt)("p",null,"Validate address using custom UI inside of your application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import OneKeyConnect, { UI } from '@onekeyfe/connect';\n\nOneKeyConnect.on(UI.ADDRESS_VALIDATION, data => {\n    console.log(\"Handle button request\", data.address, data.serializedPath);\n    // here you can display custom UI inside of your app\n});\n\nconst result = await OneKeyConnect.solanaGetAddress({\n    path: \"m/44'/501'/0'/0'\",\n    address: '33kjV3ZuiZrfZx95NFJoGNEVRuwKFvRTNCQVcrCffLpU'\n});\n// dont forget to hide your custom UI after you get the result!\n")),(0,r.kt)("h3",{id:"result"},"Result"),(0,r.kt)("p",null,"Result with only one address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n    success: true,\n    payload: {\n        address: string,     // displayed address\n        path: Array<number>, // hardended path\n        serializedPath: string,\n    }\n}\n")),(0,r.kt)("p",null,"Result with bundle of addresses sorted by FIFO"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n    success: true,\n    payload: [\n        { address: string, path: Array<number>, serializedPath: string }, // account 1\n        { address: string, path: Array<number>, serializedPath: string }, // account 2\n        { address: string, path: Array<number>, serializedPath: string }  // account 3\n    ]\n}\n")),(0,r.kt)("p",null,"Error"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n    success: false,\n    payload: {\n        error: string // error message\n    }\n}\n")),(0,r.kt)("h3",{id:"error-detail"},"Error Detail"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"firmware not support, must upgrade to the latest version.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": false,\n  "payload": {\n    "error": "Unknown message",\n    "code": "Failure_UnexpectedMessage"\n  }\n}\n')),(0,r.kt)(i.Z,{initValue:"OneKeyConnect.solanaGetAddress({\n    path: \"m/44'/501'/0'/0'\"\n});",mdxType:"Playground"}))}m.isMDXComponent=!0}}]);